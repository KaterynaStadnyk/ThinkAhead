{"version":3,"sources":["components/HOME/Articles.js","components/HOME/MainPlan.js","components/HOME/Navbar.js","components/HOME/BottomNavbar.js","components/HOME/Home.js","components/HOME/Team.js","components/HOME/About.js","services/api.js","components/Signup.js","components/Login.js","components/HOME/Legal.js","components/HOME/Profile.js","components/HOME/Explore.js","components/HOME/ShareFuneralPlan.js","components/HOME/AddContact.js","components/body/HandleBody.js","components/body/Location.js","components/body/Body.js","components/messages/Letters.js","components/messages/Quotes.js","components/messages/Documents.js","components/messages/Messages.js","components/event/Vibe.js","components/event/Eventlocation.js","components/event/Playlist.js","components/event/Memories.js","components/event/Event.js","components/FormUserComponent.js","components/event/AddMemorie.js","components/Settings.js","components/event/AddSong.js","App.js","serviceWorker.js","index.js"],"names":["Articles","state","listOfArticles","componentDidMount","axios","get","then","response","console","log","data","setState","articles","this","map","x","key","_id","title","content","Component","useStyles","makeStyles","theme","button","margin","spacing","input","display","MainPlan","classes","to","Button","variant","className","Navbar","showMenu","onClick","style","width","height","left","transitionDuration","marginLeft","root","LabelBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Home","user","props","username","Team","About","signup","password","post","catch","err","login","Signup","message","handleChange","target","name","handleSubmit","preventDefault","setUser","history","push","Form","onSubmit","Group","Label","htmlFor","Control","type","id","Alert","Login","Legal","Profile","src","alt","Explore","ShareFuneralPlan","AddContact","email","number","HandleBody","clothes","treasureInput","howToBeBuried","funeral","handleInputChange","selected","Location","finalRestAddress","e","placeholder","Body","exact","path","render","funeralId","Letters","letters","letterTo","updateFuneral","toUpdate","Quotes","Documents","Messages","Vibe","food","dressCode","kindOfVibe","flowers","Eventlocation","eventLocation","eventAddress","invite","Playlist","playlist","handleAddSong","song","artist","concat","userPlaylist","length","Memories","memories","handleAddMemories","image","usermeMories","Event","questions","q","a","FormUserComponent","step","thoughtAboutFuneral","documents","showPopUp","popUpContent","popUp","answerQuestion","questionsMap","i","renderedForm","Settings","AddSong","handelSubmit","musicTitle","musicArtist","NotFound","App","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acd0e082.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Articles extends Component {\n  state = {\n    listOfArticles: null\n  }\n  componentDidMount = () => {\n    axios.get('/articles').then(response => {\n      console.log(response.data)\n      this.setState({\n        listOfArticles : response.data\n      })\n    })\n  }\n\n\n  render() {\n\n    const articles = this.state.listOfArticles && this.state.listOfArticles.map(x => {\n      return (\n        <div key={x._id}>\n          <h3>{x.title}</h3>\n          <p>{x.content}</p>\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <p>Explore</p>\n        <div>\n          {articles}\n          </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n}));\n\nexport default function MainPlan() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <h1>Plan your......</h1>\n\n      <div>\n        <Link to=\"/body\">Body Handling</Link>\n      </div>\n\n      <div>\n        <Link to=\"/event\">Event</Link>\n      </div>\n\n      <div>\n        <Link to=\"/messages\">Messages</Link>\n      </div>\n\n\n\n      <h1>Share your ......</h1>\n      \n      <Button variant=\"contained\" className={classes.button}>\n        Plan\n      </Button>\n\n      <Button variant=\"contained\" className={classes.button}>\n        Message\n      </Button>\n\n      <Button variant=\"contained\" className={classes.button}>\n        Loved One\n      </Button>\n    </div>\n  );\n}\n","\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n    state = {\n        showMenu: false\n    }\n    showMenu = () => {\n        this.setState({\n            showMenu: !this.state.showMenu\n        });\n    }\n    render() {\n        const displayed = {\n            width: '300px',\n            height: '400px',\n            left: '0',\n            transitionDuration: '0.5s'\n        }\n        const hide = {\n            width: '300px',\n            height: '400px',\n            marginLeft: '-400px',\n            transitionDuration: '0.5s'\n        }\n        return (\n            <div>\n                {this.state.showMenu ? <button onClick={this.showMenu}>HIDE</button> : <button onClick={this.showMenu}>SHOW</button>}\n            <div style={this.state.showMenu ? displayed : hide}>\n              <nav className=\"nav-style\">\n                    <ul>\n                        <li><Link to =\"/profile\">PROFILE</Link></li>\n                        <li><Link to =\"/about\">ABOUT</Link></li>\n                        <li><Link to =\"/explore\">EXPLORE</Link></li>\n                        <li><Link to =\"/share-funeral-plans\">SHARE FUNERAL PLANS</Link></li>\n                        <li><Link to =\"/legal\">LEGAL</Link></li>\n                        <li><Link to =\"/invite-friends\">INVITE FRIENDS</Link></li>\n                        <li><Link to =\"/settings\">SETTINGS</Link></li>\n                        <li><Link to =\"/logout\">LOGOUT</Link></li>\n                </ul>\n                </nav>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// const Navbar = () => {\n//   return (\n//     <nav className=\"nav-style\">\n//       <ul>\n//       <li>\n//           <Link to=\"/signup\">Signup</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/login\">login</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/\">Home</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/about\">About</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/team\">Team</Link>\n//         </li>\n//       </ul>\n//     </nav>\n//   );\n// };\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport MessageIcon from '@material-ui/icons/Message';\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n  },\n});\n\nexport default function LabelBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('recents');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n      <BottomNavigationAction label=\"Home\" value=\"home\" icon={<HomeIcon />} />\n      <BottomNavigationAction label=\"People\" value=\"people\" icon={<EmojiPeopleIcon/>} />\n      <BottomNavigationAction label=\"Bar\" value=\"bar\" icon={<LocalBarIcon />} />\n      <BottomNavigationAction label=\"Message\" value=\"message\" icon={<MessageIcon />} />\n    </BottomNavigation>\n  );\n}","import React, { Component } from \"react\";\nimport MainPlan from \"./MainPlan\";\nimport Articles from \"./Articles\";\nimport Navbar from \"./Navbar\";\nimport BottomNavbar from \"./BottomNavbar\";  \nimport {Link} from 'react-router-dom' \n\nexport default class Home extends Component {\n  state ={\n    user : this.props.user\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <>\n      <div>\n         <h1>Welcome {this.state.user.username}</h1> \n        <p>I'm sure that every person alive at some point has thought about their own funeral. Mabye you have ideas concerning what music to play, the people who should attend or what images to display. The question is, how should the people you hold dear know about your final wishes when you´re gone? With Think Ahead all this important information is safely stored in one place and can be shared with someone you trust.</p>\n        <MainPlan />\n        <Articles />\n        <BottomNavbar />\n      </div>\n      <div>\n      <Link to='/body'>Handle body</Link>\n      </div>\n      <Articles/>\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nconst Team = () => {\n  return (\n    <div>\n     <h1>Kiran Shagoti - backend genius</h1>\n      <p>Kiran got her masters in buissnes and then decided to follow her passion and study web-development. Not only has her patience and understanding been key for our team she is also an incredible developer.</p>\n      <h1>Saga Åkermark - backend genius</h1>\n      <h1>Blenda Bonnier - React expert</h1>\n      <p>Blenda is an entreprenour that started her first company when she was 16 years old. Her creative mind combined with her coding abilities is the perfect combination for planning and building innovative applications.</p>\n      <h1>Kateryna Stadnyk - React expert</h1>\n      <p>Kateryna has that energy that influences everyone around her to get motivated and stay postitive. Before Ironhack Kateryna worked in marketing and sales and implement these skills in everything she does.</p>\n      <h1>Benjamin Fuller - UX/UI designer</h1>\n    </div>\n  )\n}\n\nexport default Team;\n","import React from 'react';\nimport Team from \"./Team\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About Us</h1>\n      <p>My grandma is very stubborn and likes to have it her way. Before she turned 90 she decided to arrange her own combined funeral/birthday party and invited her family and friends. This did not only make it possible for her to attend her own ”funeral” but she also had total control of the event, from what food to eat to what music to play. This inspired me and made me think of how I would arrange my own funeral.  What I missed was a platform where I could collect all the vital information and share it to the people closest to me. So our wonderful team at Ironhack decided to create an app that enables you to do exactly that. Think Ahead makes planning your funeral as lighthearted and simple as possible.</p>\n\n      \n      <h1>Meet the Team</h1>\n      <Team/>\n    </div>\n  )\n}\n\nexport default About;\n","// src/services/api.js\nimport axios from \"axios\";\n\nconst signup = (username, password) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };\n","import React, { Component } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { signup } from \"../services/api\";\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    signup(username, password).then(data => {\n      console.log(data);\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          password: \"\"\n        });\n      } else {\n        // successfully signed up\n        // update the state for the parent component\n        console.log(\"DATA from SIGNUP\", data);\n        this.props.setUser(data);\n        this.props.history.push(\"/welcome\");\n      }\n    });\n  };\n\n    handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    signup(username, password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          password: \"\"\n        });\n      } else {\n        // successfully signed up\n        // update the state for the parent component\n        this.props.setUser(data);\n        this.props.history.push(\"/welcome\");\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <h2>Signup</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              id=\"username\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              id=\"password\"\n            />\n          </Form.Group>\n          {this.state.message && (\n            <Alert variant=\"danger\">{this.state.message}</Alert>\n          )}\n          <Button type=\"submit\">Signup</Button>\n        </Form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { login } from \"../services/api\";\n\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    message: \"\"\n  };\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // const { username, password } = this.state;\n\n    login(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: \"\",\n          password: \"\"\n        });\n      } else {\n        // successfully logged in\n        // update the state for the parent component\n        console.log(data)\n        this.props.setUser(data);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  \n  render() {\n    return (\n      <>\n        <h2>Login</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"username\">Username: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              id=\"username\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"password\">Password: </Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              id=\"password\"\n            />\n          </Form.Group>\n          {this.state.message && (\n            <Alert variant=\"danger\">{this.state.message}</Alert>\n          )}\n          \n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </>\n    );\n  }\n}\n","import React from 'react'\n\nconst Legal = () => {\n  return (\n    <div>\n      <h1>Terms & Conditions</h1>\n\n\nTHINK AHEAD TERMS OF SERVICE\n\nWelcome to ThinkAhead!  These Terms of Service (together with ThinkAhead Privacy Policy https://www.thinkahead.com/privacy-policy and Copyright Policy https://www.thinkahead.com, the “Terms”) govern your access and use of www.thinkahead.com (the “Site”), and all products, services, mobile websites, and native mobile applications (collectively and together with the Site, the “Services”) that are owned and operated by Beyondly, Inc. (\"ThinkAhead\",” “we,” “us,” or “our”). \n\nPlease read these Terms fully and carefully before using the Services, because these Terms form a legally binding contract between you and ThinkAhead for your use of the Services.  We provide you with access to and use of the Services subject to your compliance with these Terms.  By using the Services, you agree to be bound by these Terms. If you are a financial advisor accessing the Services on behalf of your customer or another entity, you represent and warrant that you have the authority to agree to these Terms on their behalf.\n\nIn other words: This agreement governs your use of ThinkAhead and may affect your legal rights.\n\n1. Eligibility\n\nBy registering for the Services, you represent and warrant that you are at least 18 years of age.  If you are under 18, you may not, under any circumstances or for any reason, use the Services.  We reserve the right to change our eligibility criteria at any time, and to refuse to offer the Services to anyone for any reason or no reason at all.  You are solely responsible for ensuring that these Terms comply with all applicable laws, rules and regulations (collectively, “Laws”), and your right to use the Services is revoked wherever these Terms, your use of the Services, or any part of the Services conflicts with any Laws.\n\nIn other words: You can’t use the Services if you are under 18 or if these Terms or the Services violate local law.\n \n\n2. Registration and Responsibilities\n\nWhile certain aspects of the Services are public, others require you to sign up for the Services by registering for an account (an “Account”). You are solely responsible for keeping the email address associated with your Account accurate and up to date, since this is the only way we can contact you about your Account and your use of the Services. You promise not to (i) intentionally impersonate another person by using their name and/or email address or (ii) use an email address for which you don’t have the proper authorization. You must keep your password secure and should never publish, distribute or post your Account login information, because you are responsible for any activity that occurs on your Account. You set permissions for sharing or disclosing your Secure Information to another person or organization (each, a “Read Or Write Access Deputy”). You select to use the Services by yourself, or, if you are using ThinkAhead as Household with another user with whom you share ownership of the Secure Information of your ThinkAhead (each, a “Co-Administrator”). You are prohibited from using another person’s account or registration information for the Services without their permission. You promise to immediately let us know if there is any unauthorized use of your Account, security breach, or change in your eligibility to use the Services. You can delete your Account at any time by logging into your Account and visiting the “Account Settings” section, where you can click the “Delete My Account” button.\n\nIn other words: If you sign up for an Account, you are responsible for any Account activity and for keeping your Account email address up to date so that we can reach you.  Be mindful about how you share and protect your Account, and let us know immediately if you think there are any issues by contacting us through our help center.\n \n\n3. Your Information\n\na. Overview.  You are solely responsible for all Content (as defined below) that you add, create, upload, submit, distribute or post to the Services (collectively and together with Basic Information, Secure Information, Funeral Information, Advisor Services Information, Public Information and Aggregate Information (each as explained below), “Your Information”), and you represent that all of Your Information provided or generated by you is accurate, complete, current and in compliance with all Laws. For clarity, the below license grants to us and others does not affect your other ownership or license rights in Your Information, including the right to grant additional licenses to Your Information, unless otherwise agreed in writing. To be clear, you own Your Information. You promise that you have all rights to grant such licenses to us without infringement or violation of any third party rights. If you are a financial advisor accessing the Services on behalf of your customer or another entity, you represent and warrant that you have the authority to (i) add, create, upload, submit, distribute or post any and all Content to the Services on such customer or entity’s behalf and (ii) bind such customer or entity to the licenses set forth in this Section 3. \n\nIn other words: You own all of Your Information, but you’re ok with ThinkAhead and your Read Or Write Access Deputies viewing or using Your Information in accordance with this agreement.\n\ni. “Basic Information” means the first and last name, email address, gender, zip code, date of birth, and the date and time of associated with the Account creation and (if applicable) deletion of you or any Collaborator on your account, including Read Or Write Access Deputies or Co-Administrators on your ThinkAhead (each a \"Collaborator\"). By submitting Basic Information through the Services, you hereby do and shall grant us a worldwide, non-exclusive, perpetual, royalty-free, fully paid, sublicensable and transferable license to use reproduce, store, and display the Basic Information, including after termination of your Account or the Services, as necessary (1) to operate, provide, and improve the Site, the Services and our (and our successors’ and assigns’) businesses; (2) to send you and your Collaborators marketing and promotional materials with you and your Collaborators’ consent; (3) to contact your Collaborators on your behalf, and (4) for audit purposes (for example, when you delete your Account we will store the Basic Information to address certain inquiries you may have surrounding your Account) \n\nIn other words: We might use the Basic Information of you and your Collaborators to provide and improve the Services, send marketing information to you and your Collaborators with your consent, and address inquiries you have about your Account.\n\nii. Secure Information.  “Secure Information” means your private, sensitive, personal information that you privately submit through the Services, including your health and medical information, financial information, and legal information. Some of such health and health related information may be considered “Protected Health Information” or “PHI,” as defined by the Health Insurance Portability and Accountability Act of 1996 (“HIPAA”). By submitting Secure Information through the Services, you hereby do and shall grant us a worldwide, non-exclusive, royalty-free license to use, store, reproduce and display your Secure Information solely as reasonably necessary to operate the Services solely on your behalf, and subject to these Terms and our Privacy Policy located at https://www.thinkahead.com/privacy-policy. You (and your Co-Administrator, if applicable) always retain ownership of your Secure Information. We take the privacy and security of your Secure Information very seriously, and have built in privacy and security measures into our technology and our business practices. In addition, we shall handle your Secure Information in accordance with our obligations under HIPAA as a HIPAA-compliant company. Only you -- or a Co-Administrator (if applicable) -- can give permission to share any of your Secure Information with a Read Or Write Access Deputy. Since your Secure Information and all files are encrypted, in the course of our standard daily business operations we can only see the types of Secure Information users submit through the Services on a categorical basis, but not the content or details of such Secure Information. The only time we may have access to or disclose the content or details of your Secure Information is when you or a Co-Administrator (if applicable) has given the requisite permission to share such Secure Information with a Read or Write Access Deputy as further described herein, when we are required to by Law, or in other rare circumstances as described in our Privacy Policy https://www.thinkahead.com/privacy-policy. \n\nWe will store your Secure Information and share it only with the Read Or Write Access Deputies you or your Co-Administrator choose or as required by Law. While we can see which portions of the ThinkAhead you have filled out with your Secure Information, we do not in the course of normal operations see what your Secure Information actually says. We work hard to keep your Secure Information private and protected.  It is important that you read our Privacy Policy https://www.thinkahead.com/privacy-policy, so please do so.\n\niii. Funeral Information.  “Funeral Information” means the information you post, upload or otherwise submit through the Services when using the “Funeral Update” feature that you would like to be used to inform people of the particulars of the funeral.  By submitting Funeral Information through the Services, you hereby do and shall grant us a worldwide, non-exclusive, perpetual, royalty-free, fully paid, sublicensable and transferable license to use, edit, modify, truncate, aggregate, reproduce, distribute, prepare derivative works of, store, display, perform, and transmit the Funeral Information in in accordance with your instructions, including after termination of your Account or the Services.  You also hereby do and shall grant each user of the Services a non-exclusive, perpetual license to access your Funeral Information through the Services, and to use, edit, reproduce, distribute, prepare derivative works of, display and perform such Funeral Information, including after termination of your Account or the Services.  We do not guarantee the privacy or confidentiality of any Funeral Information, so please do not publicly post or submit any Content on a Funeral Update page that you do not want to be publicly accessible or viewable.  You hereby acknowledge that any Funeral Information you submit through the Services may be indexed by a search engine operator (like Google) and found in search results.\n\nIn other words: Funeral Information may be publicly accessible and searchable, so please be mindful when posting it using the Funeral Update feature.\n\niv. Use Information.  If you are working with (a) a financial advisor or (b) an employer, benefits administrator, insurance company or any third party institution (this subsection (b) collectively, a “Partner Provider”) to provide you (and, if applicable, a Co-Administrator) access to the Premium Services (as defined below), your financial advisor or Partner Provider (as applicable) may be able to see certain high-level information about your use of and access to the Services, which may include the type of Everplan you signed up for, the date and time of your last login to the Services, your total number of logins to the Services, and which sections of your Everplan you completed (collectively, the “Use Information”). By accepting a financial advisor’s or Partner Provider’s invitation to sign up for the Premium Services, (an “Invitation”), you hereby do and shall grant us a worldwide, non-exclusive, perpetual, royalty-free, fully paid, sublicensable and transferable license to use, store, aggregate, reproduce, transmit and display Use Information, internally or to your financial advisor or Partner Provider (if applicable), solely as necessary to operate, provide and improve the Site, the Services (including without limitation the Premium Services) and our (and our successors’ and assigns’) businesses, including after termination of your Account or the Services. You also hereby do and shall grant your financial advisor or Partner Provider, as applicable, a non-exclusive, perpetual license to access your Use Information through the Services, and to use, prepare derivative works of, and display such Use Information, including after termination of your Account or the Services. To be clear, Use Information may be personally identifiable and may be tied back to you (and, if applicable, your Co-Administrator), your Account and/or your web browser.\n\nIn other words, if you receive an ThinkAhead from a financial advisor or a Partner Provider, we may surface information on your use of the services back to that advisor or Partner Provider (as applicable), but never the contents of your ThinkAhead or your Secure Information unless you have designated them as a Read or Write Access Deputy for the particular Secure Information you have chosen to share.\n\nvi. Public Information.  “Public Information” means any Content you add, create, upload, submit, distribute or post to public portions of the Services, such as comments on any articles.  By publicly posting Public Information to the Services, you hereby do and shall grant us a worldwide, non-exclusive, perpetual, royalty-free, fully paid, sublicensable and transferable license to use, edit, modify, truncate, aggregate, reproduce, distribute, prepare derivative works of, store, display, perform, transmit, and otherwise fully exploit the Public Information in connection with the Services and our (and our successors’ and assigns’) businesses, including without limitation for promoting or redistributing part or all of the Site or the Services (and derivative works thereof) in any media formats and through any media channels (including, without limitation, third party websites and feeds), and including after termination of your Account or the Services.  You also hereby do and shall grant each user of the Services a non-exclusive, perpetual license to access your Public Information through the Services, and to use, edit, modify, reproduce, distribute, prepare derivative works of, display and perform such Public Information, including after your termination of your Account or the Services.  Please do not publicly post or submit any Content that you do not want publicly accessible or viewable.\n\nIn other words:  Public Information is public, so don’t include any private or sensitive information in it.\n\nvii. Aggregate Information.  “Aggregate Information” means statistical information about how you use the Services as well as your demographic information.  By submitting or generating Aggregate Information through your use of the Services, you hereby do and shall grant us a worldwide, non-exclusive, perpetual, royalty-free, fully paid, sublicensable and transferable license to use, edit, modify, truncate, aggregate, reproduce, distribute, prepare derivative works of, store, display, perform, transmit and otherwise fully exploit the Aggregate Information in connection with the Site, the Services and our (and our successors’ and assigns’) businesses, including without limitation for promoting or marketing part or all of the Site or the Services (and derivative works thereof) in any media formats and through any media channels (including, without limitation, third party websites and feeds), and including after termination of your Account or the Services.  To be clear, Aggregate Information is not personally identifiable and cannot be tied back to you, your Account or your web browser.\n\nIn other words: We may use your Aggregate Information to promote our Services, none of which is personally identifiable.\n\nb. The security, privacy, and confidentiality of your Secure Information are of utmost and critical importance to us. When we collect, maintain, access, use, or disclose your Personal Information, including without limitation your Secured Information, we will do so using systems and processes consistent with information privacy and security requirements under applicable federal and state laws, including, without limitation, HIPAA. Accordingly, we use industry standard (or better) administrative, physical, and technical protections to safeguard the security, privacy, confidentiality, and integrity of your Secure Information, and we store your Secure Information on HIPAA-compliant infrastructure. Except as permitted under this Agreement, we do not share Secure Information with third parties without your express permission. Our technology uses the encryption algorithms of the same quality relied on by banks, the military, and the U.S. government. Your Secure Information is stored in a HIPAA-compliant hosting provider that has 24/7 physical and biometric protections, firewalls, intrusion detection systems, and an array of other technological safeguards and security certifications. Click here for more information on our security measures https://www.thinkahead.com/thinkahead-security. Nevertheless, no security measure or safeguard is 100% effective, and ThinkAhead cannot guarantee absolute security of any of Your Information, including without limitation your Secure Information. THINKAHEAD SHALL NOT BE RESPONSIBLE OR LIABLE FOR UNAUTHORIZED ACCESS, HACKING OR OTHER SECURITY INTRUSIONS OR FAILURE TO STORE OR THE THEFT, DELETION, CORRUPTION, DESTRUCTION, DAMAGE, OR LOSS OF ANY DATA OR INFORMATION, INCLUDING WITHOUT LIMITATION SECURE INFORMATION.\n\nIn other words: We have an experienced team that employs better than industry standard methods to make sure that your Secure Information will be safe, though no security measure can be guaranteed to be 100% effective.\n\n4. ThinkAhead Proprietary Rights\n\nAny information, data, text, photographs, videos, audio clips, written posts and comments, software, scripts, graphics and interactive features generated, provided or otherwise made accessible on or through the Services (collectively, “Content”) are ThinkAhead property or that of our suppliers or licensors, and are protected by copyrights, trademarks, service marks, patents, trade secrets or other proprietary rights and laws.  You shall abide by and maintain all copyright notices, information and restrictions contained in any Content that you access through the Services.  Subject to these Terms, we grant you a worldwide, non-exclusive, non-sublicensable and non-transferable license to use (i.e., to download and display locally) Content solely for purposes of using the Services.  Use, reproduction, modification, distribution or storage of any Content for purposes other than using the Services is expressly prohibited without our prior written permission.  You shall not sell, license, rent, or otherwise use or exploit any Content for commercial use or in any way that violates any third party right.   We can, but do not have to, (a) remove, edit or modify any Content in our sole discretion at any time, without notice to you and for any reason (including without limitation if we think you may have violated these Terms or upon receipt of claims or allegations from third parties or authorities relating to such Content) or for no reason at all or (b) to remove or block any Content from the Services.\n\nIn other words: We own the Services and the Content.  You’re allowed to use them in accordance with this agreement.  We can edit, take down, or block any Content at any time.\n\n5. Acceptable Use\n\nAs a condition of your use of the Services, you agree to use the Services only for lawful purposes and to comply with these Terms and all Laws.  You also agree to respect the privacy and Secure Information of other users of the Services.\n\nYou agree not to, and shall not allow anyone else to (a) take any action or (b) upload, download, post, submit or otherwise distribute or facilitate the distribution of any Content, including without limitation Your Information, on or through the Service, that:\n\na.   includes anyone else’s identification documents or sensitive financial information;\n\nb.   infringes any patent, trademark, trade secret, copyright, right of publicity, right of privacy or other right of any other person or entity or violates any law or contractual duty (see our Copyright Policy https://www.thinkahead.com);\n\nc.   you know is false, misleading, untruthful or inaccurate;\n\nd.   impersonates, intimidates or harasses any person or entity, including any of our employees or representatives;\n\ne.   constitutes unauthorized or unsolicited advertising, junk or bulk e-mail (“spamming”); or\n\nf.   is unlawful, threatening, abusive, harassing, defamatory, libelous, deceptive, fraudulent, invasive of another's privacy, tortious, obscene, vulgar, pornographic, offensive, profane, contains or depicts nudity, contains or depicts sexual activity, or is otherwise inappropriate as determined by us in our sole discretion.\n\nIn other words: You must comply with the law and this agreement, and you promise not to submit any prohibited or harmful Content.\n\nYou are further prohibited from violating or attempting to violate the security of the Services or ThinkAhead’ other systems or network security, including without limitation the following:\n\na.   accessing data not intended for users of the Services;\n\nb.   gaining unauthorized access to an account, server or any other computer system;\n\nc.   attempting to or engaging in, directly or indirectly, probing, scanning or testing the vulnerability of a system or network or to breach security or authentication measures;\n\nd.   attempting to interfere with the function of the Services or the Services’ host or network, including without limitation by submitting, directly or indirectly, any Content or Your Information that contains software viruses or any other computer codes, files, or programs that are designed or intended to disrupt, damage, limit or interfere with the proper function of any software, hardware, or telecommunications equipment or to damage or obtain unauthorized access to any system, data, password or other information of ours or of any third party;\n\ne.   sending altered, deceptive or false source-identifying information, including without limitation “spoofing” or “phishing”; or\n\nf.   forging any TCP/IP packet header.\n\nIn other words: You must not violate or attempt to violate the security of the Services.\n\n6. Links to Third Party Sites\n\nYou may be able to link to third party websites, services or resources (collectively, “Third Party Sites”) on the internet, and some Third Party Sites may link to the Services.  We do not control Third Party Sites in any way, and you acknowledge and agree that we are not responsible or liable for the content, availability, functions, accuracy, legality, appropriateness, advertising, products, information, use of user information, security or privacy policies and practices, or any other aspect or materials of any Third Party Sites.  The inclusion of a link to any Third Party Site does not imply that we endorse or are associated with its operator.  In no event shall we be liable, directly or indirectly, to anyone for any damage or loss caused or alleged to be caused by or in connection with the use of or reliance on any content, goods or services available on or through any Third Party Site.  We encourage you to review the terms of service and privacy policy of any such Third Party Site.  When you access Third Party Sites, you do so at your own risk. \n\nIn other words: We don’t control any Third Party Sites and won’t be liable for any issues that may result from your use of any Third Party Sites.  The Third Party Site’s terms of service and privacy policy govern your use of it.\n\n7. Payments and Billing\n\na. Premium Services.  Some of our Services may be subject to payments now or in the future (the “Premium Services”).  Please see our Premium Services page https://www.thinkahead.com/pricing for a description of the current Premium Services.  Please note that any payment terms presented to you in the process of using or signing up for a Premium Services are incorporated into these Terms.\n\n\nc. Billing.  ThinkAhead will bill any fees associated with your use of the Premium Services plus applicable tax to the credit card you provide.  By signing up for the Premium Services, you acknowledge that the fees associated with your use of the Premium Services will be automatically billed again on each renewal date thereafter unless and until you cancel your use of and access to the Premium Services.  YOU AGREE THAT CONSISTENT RECURRING SUBSCRIPTION FEES MAY BE CHARGED AUTOMATICALLY BY US WITHOUT FURTHER AUTHORIZATION FROM YOU, UNTIL YOU PROVIDE PRIOR NOTICE (RECEIPT OF WHICH IS CONFIRMED BY US) THAT YOU HAVE TERMINATED THIS AUTHORIZATION OR WISH TO CHANGE YOUR CREDIT CARD INFORMATION.  SUCH NOTICE WILL NOT AFFECT CHARGES SUBMITTED BEFORE WE COULD REASONABLY ACT.  TO TERMINATE YOUR AUTHORIZATION OR CHANGE YOUR PAYMENT METHOD, LOG INTO YOUR ThinkAhead ACCOUNT, CLICK ON “ACCOUNT SETTING” AND UPDATE YOUR BILLING PREFERENCES.\n\nIn other words:  We will bill the credit card we have on file automatically at the end of each billing period to renew your access to the Premium Services at the price you agreed to pay, unless you tell us far enough in advance that you want to cancel your access to the Premium Services or use a different credit card. \n\nd. Current Payment Information Required.  You are responsible for keeping your credit card information current, complete and updated.  If your credit card reaches its expiration date, we may attempt to contact you to update your payment information using your primary email address associated with your Account.  You agree to promptly notify us and your credit card company if your credit card is canceled (e.g., for loss or theft) or if you become aware of potential breach of security.  You agree that we (via Stripe) may continue charging your credit card for the Premium Services unless you have terminated your access to the Premium Services or you tell us to use a different credit card before the end of the applicable billing period.  If any fee is not paid in a timely manner, or Stripe is unable to process your transaction using the credit card information you provided for payment, we reserve the right to suspend or terminate your access to the Premium Services. \n\nIn other words: You must keep your credit card information current.  We can suspend or terminate your access to the Premium Services if you don’t pay on time.\n\ne. Applicable Fees.  All fees and charges are prepaid and nonrefundable.  Beyondly may change the fees and charges in effect, or add new fees and charges from time to time, but we will notify you of any such changes in advance through your primary email address associated with your Account.  Again, it is your responsibility to keep your contact information and payment information current and updated.\n\nIn other words: We do not issue refunds, and we will let you know if we change any fees.\n\nf. Free Trials and Other Promotions.  Any free trial or other promotion that gives you access to the Premium Services must be used within the specified time of the trial.  You must stop using and cancel your access to the Premium Services before the end of the applicable trial period to avoid being charged for the Premium Services.  If you cancel prior to the end of the trial period and are inadvertently charged for a Premium Services, please contact us through our help center at https://help.thinkahead.com/customer/portal/emails/new\n\nIn other words:  Be sure to cancel your access to the Premium Services before the end of the trial period to avoid being charged.\n\n8. Cancellation\n\nYou may cancel your Account and/or your use of and access to the Premium Services at any time by logging into your ThinkAhead account here: https://my.thinkahead.com/users/sign_in and clicking “my account” followed by “account settings,” where you will see a button that says “Manage Billing and Premium Services” and cancellation will be effective immediately. You will continue to be billed for your use of and access to the Premium Services unless and until you cancel it or we terminate it.  You must cancel your use of and access to the Premium Services before the start of a new renewal period to avoid having the next period’s fees billed to your credit card.  Again, please note that any charges submitted to or processed by Stripe before we could reasonably act in response to such cancellation will not be affected.  ThinkAhead will not issue a refund for the most recently (or any previously) charged fees associated with the Premium Services prior to any such cancellation.  All provisions of these Terms which by their nature should survive termination shall survive, including without limitation, any licenses to Basic Information, Funeral Information, Public Information, or Aggregate Information, ownership provisions, warranty disclaimers, indemnity and limitation of liability.\n\nIn other words: Cancellation is effective immediately, but does not affect charges already incurred.  Parts of this agreement still apply to you even after you cancel your Account.\n\n9. Warranty Disclaimer\n\nWe have no special relationship or fiduciary duty to you. You release us from all liability for any release of Your Information, including without limitation your Secure Information, including without limitation any sections of your Secure Information marked as only available for release after you are declared dead (the “After Death Sections”) pursuant to our (a) receipt from you of any instructions or permissions authorizing such release to any other person, including without limitation any Read Or Write Access Deputy or (b) compliance with any Laws. \n\nIn other words: If we received valid instruction regarding a release of information, we’ll do what it says, and you won’t hold that against us.\n\nWe use industry standard (or better) administrative, physical and technical safeguards to protect the security, confidentiality of your Account and Your Information, including without limitation your Secure Information.  Nevertheless, we cannot guarantee absolute security, and no security measures are 100% effective and fool-proof.  THE SERVICES, INCLUDING WITHOUT LIMITATION ALL CONTENT, INFORMATION, FUNCTION, AND MATERIALS, IS PROVIDED “AS IS,” “AS AVAILABLE” AND WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY WARRANTIES IMPLIED BY ANY COURSE OF PERFORMANCE OR USAGE OF TRADE, ANY IMPLIED WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, OR ANY WARRANTIES CONCERNING THE AVAILABILITY, ACCURACY, COMPLETENESS, TIMELINESS, USEFULNESS, RELIABILITY OF ANY OPINION, ADVICE OR OTHER CONTENT, ALL OF WHICH ARE EXPRESSLY DISCLAIMED.  WE, AND OUR DIRECTORS, EMPLOYEES, AGENTS, SUPPLIERS, PARTNERS AND CONTENT PROVIDERS DO NOT WARRANT THAT: (A) THE SERVICES WILL BE TIMELY, SECURE, FREE FROM HACKING OR OTHER SECURITY INTRUSION, UNINTERRUPTED, ERROR FREE, OR AVAILABLE AT ANY PARTICULAR TIME OR LOCATION; (B) ANY DEFECTS OR ERRORS WILL BE CORRECTED; (C) ANY CONTENT OR SOFTWARE AVAILABLE AT OR THROUGH THE SERVICES IS FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS; OR (D) THE RESULTS OF USING THE SERVICES WILL MEET YOUR REQUIREMENTS OR EXPECTATIONS.  YOUR USE OF THE SERVICES IS SOLELY AT YOUR OWN RISK.   IF YOU ARE DISSATISFIED WITH THE SERVICES, YOUR SOLE REMEDY IS TO DISCONTINUE USING THE SERVICES.\n\nOTHER THAN AS REQUIRED UNDER APPLICABLE CONSUMER PROTECTION LAW, IN NO EVENT AND UNDER NO CIRCUMSTANCES WILL THINKAHEAD BE LIABLE FOR ANY LOSS OR DAMAGE CAUSED BY YOUR RELIANCE ON INFORMATION OR MATERIALS OBTAINED THROUGH THE SITE OR THIRD PARTY SITE, OR BY YOUR RELIANCE ON ANY PRODUCT OR SERVICE OBTAINED THROUGH A THIRD PARTY SITE.  YOU ARE SOLELY RESPONSIBLE FOR EVALUATING THE COMPLETENESS, ACCURACY OR USEFULNESS OF ANY OPINION, ADVICE, RESULTS, INFORMATION OR MATERIALS AVAILABLE THROUGH THE SITE OR OBTAINED THROUGH A THIRD PARTY SITE.  PLEASE SEEK THE ADVICE OF PROFESSIONALS, AS APPROPRIATE, REGARDING THE EVALUATION OF ANY SPECIFIC OPINION, ADVICE, PRODUCT, SERVICE, MATERIALS OR OTHER INFORMATION.  NO ADVICE, OPINION, RESULTS, INFORMATION OR MATERIALS, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU THROUGH THE SERVICES SHALL CREATE ANY WARRANTY NOT EXPRESSLY MADE HEREIN. \n\nIn other words: While we believe we provide some of the best security safeguards for an internet based consumer product and are constantly improving, no site can promise 100% security.  The Services are provided “as is.”  You should evaluate any Content or information you receive through the Services or any Third Party Site on your own or with your own outside professional advice.\n\n9. ThinkAhead is Not a Licensed Professional\n\nTHINKAHEAD IS NOT A LICENSED HEALTHCARE PROVIDER, MEDICAL PROFESSIONAL, LAW FIRM, OR FINANCIAL ADVISORY FIRM, AND THE EMPLOYEES OF THINKAHEAD ARE NOT ACTING AS YOUR HEALTHCARE PROVIDERS, MEDICAL PROFESSIONALS, ATTORNEYS, OR FINANCIAL ADVISORS.  THE SERVICES ARE NOT, AND SHOULD NEVER BE, A SUBSTITUTE FOR THE ADVICE OF A LICENSED HEALTHCARE PROVIDER, MEDICAL PROFESSIONAL, ATTORNEY, OR FINANCIAL ADVISOR.  THINKAHEAD CANNOT AND DOES NOT PROVIDE MEDICAL, LEGAL, OR FINANCIAL ADVICE.  THINKAHEAD IS NOT PERMITTED TO ENGAGE IN THE PRACTICE OF MEDICINE, LAW, OR FINANCIAL ADVISING.  THINKAHEAD IS PROHIBITED FROM PROVIDING ANY KIND OF ADVICE, EXPLANATION, OPINION OR RECOMMENDATION TO YOU ABOUT (A) POSSIBLE DIAGNOSES, MEDICAL CONDITIONS, MEDICAL TREATMENT, LIFE EXPECTANCY, OR PROGNOSES; (B) LEGAL RIGHTS, REMEDIES, DEFENSES, OPTIONS, SELECTION OF FORMS OR STRATEGIES; OR (C) ANY KIND OF ADVICE, EXPLANATION, OPINION OR RECOMMENDATION ABOUT POSSIBLE FINANCIAL INVESTMENTS OR STRATEGIES. \n\nIn other words: ThinkAhead does not and cannot provide medical, legal or financial services, and should never be used as a substitute for the advice of a licensed professional.\n\nNo protected or fiduciary relationship, including without limitation that of physician-patient or attorney-client, is or will be created with ThinkAhead by virtue of your use of the Services.  Accordingly, while communications between you and ThinkAhead are protected by our Privacy Policy https://www.ThinkAhead.com/privacy-policy, they are not protected by physician-patient privilege, doctor-patient confidentiality, attorney-client privilege, or the work product doctrine.  Again, ThinkAhead makes no guarantees, representations or warranties, whether express or implied, with respect to any information or materials presented on or through the Services; and will not be liable to you under any circumstances for any decision made or action taken by you in reliance on any such Content.\n\nIn other words: ThinkAhead is not and will never be your fiduciary.  Your communications with us will be kept confidential in accordance with this agreement and our Privacy Policy https://www.ThinkAhead.com/privacy-policy.\n\nThe information or materials that you obtain or receive from ThinkAhead, and its employees, contractors, partners, sponsors, advertisers, licensors or otherwise on or through the Services is for informational purposes only.  All medically related information comes from independent health care professionals and organizations.  At no time does ThinkAhead review the information you provide us for legal sufficiency, draw legal conclusions, provide legal advice, or apply the law to the facts of your particular situation.  Neither ThinkAhead nor the Services are intended to provide personalized financial or tax advice, and you hereby agree that any information provided to or accessed by you from time to time on or through the Services is not developed or provided by ThinkAhead as investment advice and will not be used or treated by you as investment advice.\n\nIn other words: Anything you access through the Services is for informational purposes only, and you won’t use it as personalized advice.\n\n11. Indemnification\n\nYou shall defend, indemnify and hold harmless us, our affiliates and each of our and their respective employees, contractors, directors, suppliers and representatives from all liabilities, claims and expenses, including reasonable attorneys’ fees, that arise from or relate to your use or misuse of, or access to, the Services, Content, or otherwise from Your Information, violation of these Terms, or infringement by you, or any third party using your Account or identity in the Services, of any intellectual property or other right of any person or entity. We reserve the right to assume the exclusive defense and control of any matter otherwise subject to indemnification by you, in which event you will assist and cooperate with us in asserting any available defenses.\n\nIn other words: You will reimburse us for any loss we suffer that is tied to your Account and results from any use or misuse of the Services, violation of this agreement, or infringement of any third party’s right.\n\n12. Limitation of Liability\n\nTO THE GREATEST EXTENT PERMITTED UNDER APPLICABLE LAW, IN NO EVENT SHALL WE, OUR AFFILIATES, NOR ANY OF OUR OR THEIR RESPECTIVE DIRECTORS, EMPLOYEES, AGENTS, PARTNERS, SUPPLIERS OR CONTENT PROVIDERS, BE LIABLE TO YOU OR TO YOUR READ OR WRITE ACCESS DEPUTIES, HEIRS, SUCCESSORS OR YOUR ESTATE FOR (A) ANY INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL, COMPENSATORY, EXEMPLARY OR PUNITIVE DAMAGES ARISING FROM OR DIRECTLY OR INDIRECTLY RELATED TO (I) THE USE OF, OR THE INABILITY TO USE, THE SERVICES, CONTENT, MATERIALS AND FUNCTIONS RELATED THERETO, (II) UNAUTHORIZED ACCESS TO OR LOSS, CORRUPTION OR ALTERATION OF YOUR INFORMATION, DATA, TRANSMISSIONS, CONTENT OR OTHER INFORMATION, (III) ANY BUGS, VIRUSES, TROJAN HORSES, OR THE LIKE (REGARDLESS OF THE SOURCE OF ORIGINATION) (IV) STATEMENTS OR CONDUCT OF ANY THIRD PARTY ON OR USING THE SERVICES, (V) ThinkAhead’ ACTIONS OR OMISSIONS IN RELIANCE UPON YOUR ACCOUNT OR CREDIT CARD INFORMATION AND ANY CHANGES THERETO OR NOTICES RECEIVED THEREFROM, (VI) YOUR FAILURE TO PROTECT THE CONFIDENTIALITY OF YOUR INFORMATION OR ANY PASSWORDS OR ACCESS RIGHTS TO YOUR ACCOUNT, (VII) THE ACTS OR OMISSIONS OF ANY THIRD PARTY USING OR INTEGRATING THE SERVICES OR (VIII) ANY OTHER MATTER RELATING OT THE SERVICES, INCLUDING WITHOUT LIMITATION, LOSS OF REVENUE, ANTICIPATED PROFITS, GOODWILL, LOST BUSINESS, USE, DATA, SALES, COST OF SUBSTITUTE SERVICES, OR OTHER INTANGIBLE LOSSES (HOWEVER ARISING), EVEN IF ThinkAhead OR ITS REPRESENTATIVE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (B) ANY DIRECT DAMAGES IN EXCESS OF (IN THE AGGREGATE) OF the greater of (A) fees paid to us for the particular Services during the immediately previous three (3) month period or (B) $500.00.\n\nIn other words: Our legal liability to you is limited.  Please understand that we cannot run our business without it.\n\n\n14. Modification\n\nWe can modify, amend, change or replace any of the terms, conditions or provisions of these Terms, or change, suspend or discontinue the Services (including without limitation the availability of any feature, database or content) at any time by replacing these Terms on the Site and by sending you a notice through the Services via email.  It is your responsibility to check these Terms periodically for changes, and to keep your email address current.  We may also impose limits on certain features and services or restrict your access to parts or all of the Services without notice or liability.  Your continued use of the Services following notification of any changes to these Terms constitutes acceptance of those changes.  If you disagree with the new terms, please stop using the Services (but, before doing so, you may want to export and delete your Secure Information and your Account from the Services).  In the unlikely event that we discontinue the Services, we will notify you to allow you to export Your Information.\n\nIn other words: This agreement may change, and if you continue using the Services after such change you will be deemed to have accepted the new terms.  We don’t anticipate shutting down, but in case we do, we want you to be able to get Your Information.\n\n15. Miscellaneous\n\na. Entire Agreement.  These Terms and all other ThinkAhead agreements and policies expressly incorporated by reference, each as may be amended or modified by ThinkAhead in accordance with its terms from time to time, together constitute the entire agreement between you and us and govern your use of the Services, and supersede all prior or contemporaneous communications and agreements of any kind between you and us with respect to the Services.  If any incorporated agreements or policies conflict with these Terms, these Terms shall control.\n\nb. Section Headings and “In Other Words.”  The section headings and “in other words” mini-paragraphs are for convenience only, shall not affect their interpretation, and shall have no legal or contractual effect.  If the terms and conditions of these Terms and the section headings and “in other words” mini-paragraphs conflict, the terms and conditions of these Terms shall prevail.\n\nIn other words: We tried to make this as simple as possible, but the section headings and “in other words” mini-paragraphs are not actually part of the agreement.  You have to read the full Terms.\n\nc. Force Majeure.  We shall not be liable for any failure to perform our obligations under these Terms where such failure results from any cause beyond our reasonable control, including without limitation mechanical, electronic or communications failure or degradation.\n\nd. Waiver and Severability.  Our failure to exercise or enforce any right or provision of these Terms shall not constitute a waiver of our right to later enforce that or any other part of these Terms.  Waiver of compliance in any particular instances does not mean that we will waive compliance in the future.  In order for any waiver of compliance with these Terms to be binding, we must provide you with written notice of such waiver through one of our authorized representatives.  If any provision of these Terms is found to be unenforceable or invalid, that provision will be limited or eliminated to the minimum extent necessary so that these Terms will otherwise remain in full force and effect and enforceable.\n\nIn other words:  The only valid way for us to waive your compliance with any of this agreement is by written notice from us.  If any part of this agreement is found to be invalid, the rest still stands. \n\ne. Assignment.  These Terms are personal to you, and you may not assign, transfer or sublicense any of your rights or obligations under these Terms without ThinkAhead’ express prior written consent.  We may assign, transfer or delegate any of our rights and obligations hereunder without consent.\n\nf. No Relationship.  No agency, partnership, joint venture or employment relationship is created as a result of these Terms and neither party has any authority of any kind to bind the other in any respect.\n\ng. Cancellation and Termination.  Again, you may cancel your Account and export and delete your Secure Information at any time.  ThinkAhead may also suspend or terminate your Account if you violate these Terms.  We may attempt to notify you before suspending or terminating your Account so that you can export or delete your Secure Information, but we reserve the right to immediately suspend or terminate your Account in certain circumstances, such as causing harm to another user, disrupting other users’ use of the Services, or causing ThinkAhead potential legal liability.\n\nh. Notices.  Unless otherwise specified in these Terms, all notices under these Terms will be in writing and will be deemed to have been duly given when (i) receipt is electronically confirmed, if transmitted by facsimile email; (ii) received, if personally delivered or sent by certified or registered mail, return receipt requested; or (iii) the day after it is sent, if sent for next day delivery or recognized overnight delivery service.  Electronic notices should be sent by contacting us through our help center at https://help.ThinkAhead.com/customer/portal/emails/new\n\n \n\nContact:  You may contact us at the following address:\n\nWeWork IronHack\nEichhornstrasse\nBerlin\n\n\nEFFECTIVE DATE: 04/10/2019\nLAST UPDATE: 04/10/2019\n    </div>\n  )\n}\n\nexport default Legal;\n","import React from 'react'\n\nconst Profile = () => {\n  return (\n    <div>\n      <img src=\"\" alt=\"profile-picture\" />\n      <h1>Name</h1>\n      <p>Email Address</p>\n      <p>Mobile</p>\n      <p>Location</p>\n      <p>My Plan</p>      \n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport Articles from './Articles'\n\nconst Explore = () => {\n  return (\n    <div>\n      <Articles/>\n    </div>\n  )\n}\n\nexport default Explore;\n","import React from 'react'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link } from \"react-router-dom\";\n\n\n\n\n\nexport default class ShareFuneralPlan extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Do you know who you want to share your final wish with??</h1>\n\n    \n    \n        <Link to=\"/share-funeral-plans/add-contact\"><PersonAddIcon /></Link>\n     \n      </div>\n    )\n  }\n\n\n}\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    number: \"\",\n    message: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, email, number, message } = this.state;\n\n    //   axios\n    //     .post(\"/api/tasks\", {\n    //       name,\n    //       email,\n    //       number,\n    //       message,\n    //       ContactId: this.props.ContactId\n    //     })\n    //     .then(() => {\n    //       this.props.getData();\n    //       this.props.hideForm();\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //     });\n    // };\n\n  }\n    render() {\n      return (\n        <div>\n          <h2>Add Contact </h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Number:</Form.Label>\n              <Form.Control\n                type=\"number\"\n                name=\"number\"\n                value={this.state.number}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Button type=\"submit\">Save</Button>\n          </Form>\n        </div>\n      )\n    }\n  }\n","import React, { Component } from \"react\";\nimport axios from 'axios'\n\nclass HandleBody extends React.Component {\n  state = {\n    // checked: false,\n    // handleTheBody: '',\n    // otherInput: \"\",\n    // dressCode: \"\",\n    // treasureInput: \"\",\n    // howToBeBuried: \"\",\n    // other: \"\",\n    clothes: \"\",\n    treasureInput: \"\",\n    howToBeBuried: '',\n    user: this.props.user,\n    funeral: this.props.funeral\n  };\n\n// COMPONEN DID MOUNT ---> GET FUNERAL\n  componentDidMount = () => {\n\n    axios.get(`/funeral/${this.state.user.funeral}`).then(response => {\n\n      const {howToBeBuried, clothes, treasureInput} = response.data\n      \n      this.setState({\n        howToBeBuried,\n        clothes,\n        treasureInput\n\n      },() => console.log('FUNERAL IN HANDLEBODY STATE:',this.state))\n\n    }).catch(err => console.log(err))\n  }\n\n// UPDATE FUNERAL ---> POST IN FUNERAL/UPDATEFUNERAL/:ID\n  handleSubmit = event => {\n    \n    event.preventDefault();\n\n    const {howToBeBuried, clothes, treasureInput} = this.state\n    \n    axios.post(`/funeral/updatefuneral/${this.state.user.funeral}`, {howToBeBuried, clothes, treasureInput}).then(response => {\n      console.log('NEW DATA:',response.data)\n    \n    }).catch(err => console.log(err))\n  };\n\n\n\n\n\n\n\n\n  \n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name]: value\n      },() => console.log('CHANGES IN STATE:',this.state));\n  };\n\n  render() {\n    console.log('FUNERALS',this.props.funeral)\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <select name=\"howToBeBuried\"  >\n          <option value=\"Classic funeral\" selected={this.state.howToBeBuried === 'Classic funeral'}>Classic funeral</option>\n          <option value=\"Cremation\" selected={this.state.howToBeBuried === 'Cremation'}>Cremation</option>\n          <option value=\"Tree\" selected={this.state.howToBeBuried === 'Tree'}>Tree</option>\n          <option value=\"Science\" selected={this.state.howToBeBuried === 'Science'}>Science</option>\n        </select>\n        \n           \n\n\n\n\n        <br />\n        <label>\n          What do you want to wear?\n          <input\n            name=\"clothes\"\n            type=\"text\"\n            value={this.state.clothes}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label>\n          Do you want to bring any treasures with you?\n          <input\n            name=\"treasureInput\"\n            type=\"text\"\n            value={this.state.treasureInput}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default HandleBody; \n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form } from \"react-bootstrap\";\n\n\nclass Location extends Component {\n\n  state = {\n    user:this.props.user,\n    finalRestAddress: \"\"\n  };\n\n// GET FUNERAL\ncomponentDidMount = () => {\n\n  axios.get(`/funeral/${this.state.user.funeral}`).then(response => {\n\n    const {finalRestAddress} = response.data\n    \n    this.setState({\n\n      finalRestAddress\n\n    },() => console.log('FUNERAL IN LOCATION STATE:',this.state))\n\n  }).catch(err => console.log(err))\n}\n\n// UPDATE FUNERAL\nhandleSubmit = event => {\n    \n  event.preventDefault();\n\n  const {finalRestAddress} = this.state\n  \n  axios.post(`/funeral/updatefuneral/${this.state.user.funeral}`, {finalRestAddress}).then(response => {\n    console.log('NEW DATA:',response.data)\n  \n  }).catch(err => console.log(err))\n};\n\n// UPDATE STATE\nhandleChange = e => {\n\n  const {name, value} = e.target\n  \n  this.setState({\n  \n    [name]:value\n  })\n}\n\n render() {\n   return (\n     <div>\n       <Form onSubmit={this.handleSubmit}>\n         <Form.Group>\n           <Form.Label>Final Rest</Form.Label>\n           <Form.Control\n             type=\"text\"\n             name=\"finalRestAddress\"\n             value={this.state.finalRestAddress}\n             onChange={this.handleChange}\n             placeholder=\"final rest location\"\n           />\n         </Form.Group>\n         <input type=\"submit\" value=\"Submit\" />{\" \"}\n       </Form>\n     </div>\n   );\n }\n}\nexport default Location;\n\n","import React, { Component } from \"react\";\nimport App from \"../../App\";\nimport Navbar from \"../HOME/Navbar\";\nimport { Link, Route } from \"react-router-dom\";\nimport HandleBody from \"./HandleBody\";\nimport Location from \"./Location\";\nimport axios from 'axios'\n\nexport default class Body extends Component {\n  state ={\n    user:this.props.user,\n    funeral:null\n  }\n  \n  render() {\n    this.state.user && console.log(\"USER FROM BODY COMP.\", this.state.user);\n    this.state.funeral && console.log(\"FUNERAL FROM BODY COMP.\", this.state.funeral);\n    return (\n      <div>\n        \n        <Route exact path=\"/body/handlebody\" render={() => <HandleBody user={this.state.user} funeralId={this.state.user.funeral}/>}></Route>\n        <Link to=\"/body/handlebody\">       \n          <div>Handle Body</div>        \n        </Link>\n        \n        {/* <Route exact path=\"/body/location\" component={Location}></Route> */}\n        <Route exact path=\"/body/location\" render={() => <Location user={this.state.user} funeralId={this.state.user.funeral}/>}></Route>\n        <Link to=\"/body/location\">\n          <div>Location</div>\n        </Link>\n      \n        <div>\n          <h2>Plan More...</h2>\n          <button>Religion icon</button>\n          <button>Coffin icon </button>\n          <button>Science icon</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Form, Label, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport class Letters extends Component {\n  state = {\n    letters: \"\",\n    letterTo: \"\"\n  };\n\n  componentDidMount = () => {\n    console.log(this.props);\n  };\n\n  updateFuneral = toUpdate => {\n    axios\n      .post(`/updateFuneral/${this.props.user.funeral}`, toUpdate)\n      .then(response => {\n        console.log(response.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { letters, letterTo } = this.state;\n\n    this.updateFuneral({ letters: letters, letterTo: letterTo });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Label> Write a letter </Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"letters\"\n            value={this.state.letters}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label> To: </Form.Label>\n\n          <Form.Control\n            type=\"text\"\n            name=\"letterTo\"\n            value={this.state.letterTo}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Button type=\"submit\">Add memory</Button>\n      </Form>\n    );\n  }\n}\n\nexport default Letters;\n","import React, { Component } from \"react\";\n\nexport class Quotes extends Component {\n  render() {\n    return <div>\n    <p>quotes</p> \n    <input type=\"text\"></input>\n    </div>;\n  }\n}\n\nexport default Quotes;\n","import React, { Component } from \"react\";\n\nexport default class Documents extends Component {\n  render() {\n    return (\n      <div>\n        <p>add document</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Letters from \"./Letters\";\nimport Quotes from \"./Quotes\";\nimport Documents from \"./Documents\";\nimport { Link, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport class Messages extends Component {\n  state = {\n    user: this.props.user,\n    funeral: null\n  };\n\n  componentDidMount = () => {\n    console.log(this.props.user);\n    axios\n      .get(`/funeral/${this.state.user.funeral}`)\n      .then(response => {\n        console.log(\"axios get:\", response.data);\n        this.setState({\n          funeral: response.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // updateFuneral = toUpdate => {\n  //   axios\n  //     .post(`/updateFuneral/${this.state.funeral._id}`, toUpdate)\n  //     .then(response => {\n  //       console.log(response.data);\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n\n  render() {\n    return (\n      <div>\n        <p> Write letters to your loved ones and share your favorite quotes</p>\n\n        <Link to=\"/letters\">\n          <button>letter icon</button>\n          <div>Letters</div>\n        </Link>\n\n        <Link to=\"/quotes\">\n          <button> \"\" </button>\n          <div>Quotes</div>\n        </Link>\n\n        <Link to=\"/documents\">\n          <button> document icon </button>\n          <div>Documents</div>\n        </Link>\n        <Route\n          exact\n          path=\"/letters\"\n          render={props => (\n            <Letters\n              user={this.state.user}\n              updateFuneral={this.updateFuneral}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/quotes\"\n          render={props => (\n            <Quotes\n              user={this.state.user}\n              updateFuneral={this.updateFuneral}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/documents\"\n          render={props => (\n            <Documents\n              user={this.state.user}\n              updateFuneral={this.updateFuneral}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Label, Button } from \"react-bootstrap\";\n\nexport default class Vibe extends Component {\n\n  state = {\n    // sadMood: false,\n    // happyMood: true,\n    user:this.props.user,\n    food: \"\",\n    dressCode: \"\",\n    kindOfVibe:'',\n    flowers: \"\",\n\n  };\n\n  \n\n  // COMPONEN DID MOUNT ---> GET FUNERAL\n  componentDidMount = () => {\n\n    axios.get(`/funeral/${this.state.user.funeral}`).then(response => {\n\n      const {food, dressCode, kindOfVibe, flowers} = response.data\n      \n      this.setState({\n        food,\n        dressCode,\n        kindOfVibe,\n        flowers\n\n      },() => console.log('FUNERAL IN VIBE STATE:',this.state))\n\n    }).catch(err => console.log(err))\n  }\n\n// UPDATE FUNERAL ---> POST IN FUNERAL/UPDATEFUNERAL/:ID\n  handleSubmit = event => {\n    \n    event.preventDefault();\n\n    const {food, dressCode, kindOfVibe, flowers} = this.state\n    \n    axios.post(`/funeral/updatefuneral/${this.state.user.funeral}`, {food, dressCode, kindOfVibe, flowers}).then(response => {\n      console.log('NEW DATA:',response.data)\n    \n    }).catch(err => console.log(err))\n  };\n\n\n\n\n\n\n\n\n  \n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name]: value\n      },() => console.log('CHANGES IN STATE:',this.state));\n  };\n\n\n  \n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n\n        <Form.Group>\n            <Form.Label>Vibe</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"kindOfVibe\"\n              value={this.state.kindOfVibe}\n              onChange={this.handleChange}\n              placeholder=\"kind of vibe\"\n            />\n          </Form.Group>\n\n\n          <Form.Group>\n            <Form.Label>Food</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"food\"\n              value={this.state.food}\n              onChange={this.handleChange}\n              placeholder=\"Make sure your guests gets to eat your favourite foods\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Dresscode</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"dressCode\"\n              value={this.state.dressCode}\n              onChange={this.handleChange}\n              placeholder=\"Spark up the goodbye party with a theme\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Flowers</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"flowers\"\n              value={this.state.flowers}\n              onChange={this.handleChange}\n              placeholder=\"Let your planer know what flowers you love the most\"\n            />\n          </Form.Group>\n\n          <Button type=\"submit\">Update funeral</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport { Form, Label, Button } from \"react-bootstrap\";\n\n class Eventlocation extends Component {\n  state = {\n    user:this.props.user,\n    eventLocation: \"\",\n    eventAddress: \"\",\n    invite: []\n  };\n\n  // COMPONEN DID MOUNT ---> GET FUNERAL\n  componentDidMount = () => {\n\n    axios.get(`/funeral/${this.state.user.funeral}`).then(response => {\n\n      const {eventLocation, eventAddress, invite} = response.data\n      \n      this.setState({\n        eventLocation,\n        eventAddress,\n        invite\n\n      },() => console.log('FUNERAL IN HANDLEBODY STATE:',this.state))\n\n    }).catch(err => console.log(err))\n  }\n\n// UPDATE FUNERAL ---> POST IN FUNERAL/UPDATEFUNERAL/:ID\n  handleSubmit = event => {\n    \n    event.preventDefault();\n\n    const {eventLocation, eventAddress, invite} = this.state\n    \n    axios.post(`/funeral/updatefuneral/${this.state.user.funeral}`, {eventLocation, eventAddress, invite}).then(response => {\n      console.log('NEW DATA:',response.data)\n    \n    }).catch(err => console.log(err))\n  };\n\n\n\n\n\n\n\n\n  \n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name]: value\n      },() => console.log('CHANGES IN STATE:',this.state));\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              name=\"eventLocation\"\n              value={this.state.eventLocation}\n              onChange={this.handleChange}\n              placeholder=\"Where do you want people to celebrate your life?\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              name=\"eventAddress\"\n              value={this.state.eventAddress}\n              onChange={this.handleChange}\n              placeholder=\"Adress\"\n            />\n          </Form.Group>\n          \n          <Button type=\"submit\">Update funeral</Button>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default Eventlocation;","import React, { Component } from \"react\";\nimport axios from 'axios'\n\nexport default class Playlist extends Component {\n  state = {\n    user:this.props.user,\n    playlist:[]\n  }\n\n  \n\n  // COMPONEN DID MOUNT ---> GET FUNERAL\n  componentDidMount = () => {\n\n    axios.get(`/funeral/${this.state.user.funeral}`).then(response => {\n\n      const {playlist} = response.data\n      \n      this.setState({\n\n        playlist\n\n      },() => console.log('FUNERAL IN HANDLEBODY STATE:',this.state))\n\n    }).catch(err => console.log(err))\n  }\n\n// UPDATE FUNERAL ---> POST IN FUNERAL/UPDATEFUNERAL/:ID\n  handleSubmit = event => {\n    \n    event.preventDefault();\n\n    const {playlist} = this.state\n    \n    axios.post(`/funeral/updatefuneral/${this.state.user.funeral}`, {playlist}).then(response => {\n      console.log('NEW DATA:',response.data)\n    \n    }).catch(err => console.log(err))\n  };\n\n\n\n\n\n\n\n\n  \n  handleAddSong = e => {\n\n    e.preventDefault();\n\n    const song = e.target.song.value;\n    const artist = e.target.artist.value;\n    \n    this.setState({\n\n        playlist: this.state.playlist.concat({song:song, artist:artist})\n      \n      },() => console.log('CHANGES IN STATE:',this.state));\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n\n    const userPlaylist = this.state.playlist.length && this.state.playlist.map(x => {\n      return (\n        <div key={x.artist + x.song}>\n          <p><b>{x.artist}</b></p>\n          <p>{x.song}</p>\n        </div>\n      )\n    })\n\n    return (\n      <>\n      <div>\n      <h4>Your playlist</h4>\n      {userPlaylist}\n      </div>\n\n      <form onSubmit={this.handleAddSong}>\n      <label>Song</label>\n      <input type='text' name='song' placeholder='Add song'/>\n\n      <label>Artist</label>\n      <input type='text' name='artist' placeholder='Add artist'/>\n      <button type='submit' >Add Song</button>\n      <button type='button' onClick={this.handleSubmit}>Update funeral</button>\n\n      </form>\n\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport axios from 'axios'\n\nexport default class Memories extends Component {\n  state = {\n    user:this.props.user,\n    memories:[]\n  }\n\n  // COMPONEN DID MOUNT ---> GET FUNERAL\n  componentDidMount = () => {\n\n    axios.get(`/funeral/${this.state.user.funeral}`).then(response => {\n\n      const {memories} = response.data\n      \n      this.setState({\n\n        memories\n\n      },() => console.log('FUNERAL IN HANDLEBODY STATE:',this.state))\n\n    }).catch(err => console.log(err))\n  }\n\n// UPDATE FUNERAL ---> POST IN FUNERAL/UPDATEFUNERAL/:ID\n  handleSubmit = event => {\n    \n    event.preventDefault();\n\n    const {memories} = this.state\n    \n    axios.post(`/funeral/updatefuneral/${this.state.user.funeral}`, {memories}).then(response => {\n      console.log('NEW DATA:',response.data)\n    \n    }).catch(err => console.log(err))\n  };\n\n\n\n\n\n\n\n\n  \n  handleAddMemories = e => {\n\n    e.preventDefault();\n\n    const image = e.target.image.value;\n    const memories = e.target.memories.value;\n    \n    this.setState({\n\n        memories: this.state.memories.concat({memories:memories, image:image})\n      \n      },() => console.log('CHANGES IN STATE:',this.state));\n  };\n  render() {\n\n    const usermeMories = this.state.memories.length && this.state.memories.map(x => {\n      return (\n        <div key={x.image + x.memories}>\n          <p>{x.image}</p>\n          <p>{x.memories}</p>\n        </div>\n      )\n    })\n\n\n    return (\n      <>\n      <div>\n      <h4>Your memories</h4>\n      {usermeMories}\n      </div>\n\n      <form onSubmit={this.handleAddMemories}>\n      <label>Image</label>\n      <input type='text' name='image' placeholder='IMAGE TO FIX'/>\n\n      <label>Memories</label>\n      <input type='text' name='memories' placeholder='Write memories'/>\n      <button type='submit' >Add Memory</button>\n      <button type='button' onClick={this.handleSubmit}>Update funeral</button>\n\n      </form>\n\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport Vibe from \"./Vibe\";\nimport Eventlocation from './Eventlocation';\nimport Playlist from './Playlist';\nimport Memories from './Memories';\n\n\nexport default class Event extends Component {\n  state = {\n    user: this.props.user,\n    funeral: null,\n    \n  };\n\n\n  render() {\n    return (\n      <div className=\"event-container\">\n\n        <div>\n          Would you like to ask people to speak?\n      \n          <Link to=\"/performance\">\n            <button> type=\"button\">Arrow-btn</button>\n          </Link>\n        </div>\n        <Switch>\n        <Route exact path=\"/event/vibe\" render={() => <Vibe user={this.state.user} funeralId={this.state.user.funeral}/>}></Route> \n        <Route exact path=\"/event/eventlocation\" render={() => <Eventlocation user={this.state.user} funeralId={this.state.user.funeral}/>}></Route>\n        <Route exact path=\"/event/playlist\" render={() => <Playlist user={this.state.user} funeralId={this.state.user.funeral}/>}></Route>\n        <Route exact path=\"/event/memories\" render={() => <Memories user={this.state.user} funeralId={this.state.user.funeral}/>}></Route>\n        </Switch>\n\n        <Link to=\"/event/vibe\">\n          <button type=\"button\">VIBE</button>\n        </Link>\n\n\n        <Link to=\"/event/eventlocation\">\n          <button type=\"button\">EVENT LOCATION</button>\n        </Link>\n      \n        <Link to=\"/event/playlist\">\n          <button type=\"button\">PLAYLIST</button>\n        </Link>\n      \n        <Link to=\"/event/memories/\">\n          <button type=\"button\">MEMORIES</button>\n        </Link>\n      \n      </div>\n    );\n\n  }\n}\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'; \n\n\n\n\n\nconst questions = [\n    {\n        name: 'thoughtAboutFuneral',\n        q: \"Have you ever thought about your funeral ?\",\n        a: ['yes', 'no']\n    },\n    {\n        name: 'howToBeBuried',\n        q: \"Do you know how you want to be buried ?\",\n        a: ['Classic funeral', 'Cremation', 'Tree', 'Science', 'I don\\'t know']\n    },\n    {\n        name: 'kindOfVibe',\n        q: \"What kind of vibe ?\",\n        a: ['sad', 'happy']\n    },\n    {\n        name: 'documents',\n        q: \"Submit documents ?\",\n        a: ['yes', 'no']\n    }\n]\n\n\n\nclass FormUserComponent extends Component {\n    state = {\n        step: 1,\n        thoughtAboutFuneral: false,\n        howToBeBuried: false,\n        kindOfVibe: false,\n        documents: false,\n        showPopUp: false,\n        popUpContent: ''\n    }\n    popUp = q => {\n        let content = ''\n        if (q === 'thoughtAboutFuneral') {\n            content = \"blabla funerals\"\n        } else if (q === 'howToBeBuried') {\n            content = \"bliblo burried\"\n        }\n        this.setState({\n            showPopUp: true,\n            popUpContent: content\n        });\n    }\n    handleChange = e => {\n        console.log(e.target)\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        }, () => console.log(this.state));\n    }\n    answerQuestion = (q, a) => {\n        if (a === 'no' || a === 'I don\\'t know') {\n            this.popUp(q)\n        }\n        this.setState({\n            [q]: a,\n            step: this.state.step + 1\n        }, () => console.log(this.state))\n    }\n\n    // \n    handleSubmit = e => {\n      e.preventDefault()\n      const {howToBeBuried, kindOfVibe, documents} = this.state\n      console.log(howToBeBuried, kindOfVibe, documents)\n      // Do axios post request here \n      axios.post('/funeral/new', {howToBeBuried, kindOfVibe, documents}).then(response => {\n        console.log(response.data)\n    }).catch(err => console.log(err))\n    this.props.history.push(\"/\");\n    }\n\n\n    render() {\n        const questionsMap = questions.map((x, i) => {\n            return (<div>\n                <label>{x.q}</label>\n                {x.a.map(a => {\n                    return (\n                        <>\n                            <button onClick={e => {\n                                e.preventDefault()\n                                this.answerQuestion(x.name, a)\n                            }}>{a}</button>\n                        </>\n                    )\n                })}\n            </div >)\n        });\n        const renderedForm = (\n            <form>\n                {questionsMap[this.state.step - 1]}\n                {this.state.step < 5 ?\n                    <button onClick={e => {\n                        e.preventDefault()\n                        this.answerQuestion(null, '')\n                    }}>Skip</button>\n                    :\n                    <button onClick={\n                        this.handleSubmit\n                    }>Done</button>\n                }\n            </form>\n        )\n        return (\n            <>\n                {renderedForm}\n                {this.state.showPopUp && <div>{this.state.popUpContent}</div>\n                }\n            </>\n        )\n    }\n}\n\nexport default FormUserComponent; ","import React, { Component } from \"react\";\nimport { Form, Label, Button, Link} from \"react-bootstrap\";\n\nexport default class AddMemorie extends Component {\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handelSubmit}>\n          <Form.Group>\n            <Form.Label>Memories</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"memorie\"\n              value={this.state.imgName}\n              onChange={this.handleChange}\n              placeholder=\"Upload picture\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              name=\"Artist\"\n              value={this.state.memorieStory}\n              onChange={this.handleChange}\n              placeholder=\"Remember when...\"\n            />\n          </Form.Group>\n          <Button type=\"submit\">Add Memorie</Button>\n        </Form>\n        {/* <Link to=\"/memories\">Go back to memories</Link> */}\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nconst Settings = () => {\n  return (\n    <div>\n      <h1>Account Settings</h1>\n\n      <hr />\n      <h3>Account Information:</h3>\n      <button>Manage</button>\n      <hr />\n      <p>Manage your profile, email addresses and account password.</p>\n\n      <h3>Subscription and Billing:</h3>\n      <button>Purchase a subscription</button>\n      <hr />\n      <p>Your ThinkAhead trial expires soon. Please provide your credit card information to continue your subscription for just €50/year.</p>\n\n      <h3>My Current Situation:</h3>\n      <button>Manage</button>\n      <hr />\n      <p>Had any big life changes since you began using ThinkAhead? Keep us updated so that we can show you the next best steps to take.</p>\n\n      <h3>Two-Step Verification:</h3>\n      <button>Manage</button>\n      <hr />\n      <p>Two-Step Verification is not enabled for your account. We recommend that you turn on this extra layer of security as soon as possible.</p>\n\n      <h3>Email preferences:</h3>\n      <button>Manage</button>\n      <hr/>\n      <p>Go here to manage your email preferences.</p>\n\n      <h3>Delete your account:</h3>\n      <button>Delete My Account</button>\n\n    </div>\n  )\n}\n\nexport default Settings\n","import React, { Component } from \"react\";\nimport { Form, Label, Button } from \"react-bootstrap\";\n\nexport default class AddSong extends Component {\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handelSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"Title\"\n              value={this.state.musicTitle}\n              onChange={this.handleChange}\n              placeholder=\"Song title\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Artist</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"Artist\"\n              value={this.state.musicArtist}\n              onChange={this.handleChange}\n              placeholder=\"Name of artist\"\n            />\n          </Form.Group>\n          <Button type=\"submit\">Add Song</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Articles from \"./components/HOME/Articles\";\nimport Home from \"./components/HOME/Home\";\nimport Navbar from \"./components/HOME/Navbar\";\nimport About from \"./components/HOME/About\";\nimport Team from \"./components/HOME/Team\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport BottomNavbar from \"./components/HOME/BottomNavbar\";\n// import MainPlan from \"./components/MainPlan\";\nimport Legal from \"./components/HOME/Legal\";\nimport Profile from \"./components/HOME/Profile\";\nimport Explore from \"./components/HOME/Explore\";\nimport ShareFuneralPlan from \"./components/HOME/ShareFuneralPlan\";\nimport AddContact from \"./components/HOME/AddContact\";\nimport Body from \"./components/body/Body\";\nimport HandleBody from \"./components/body/HandleBody\";\nimport Location from \"./components/body/Location\";\nimport Messages from \"./components/messages/Messages\";\nimport Quotes from \"./components/messages/Quotes\";\nimport Letters from \"./components/messages/Letters\";\nimport Documents from \"./components/messages/Documents\"\nimport Event from \"./components/event/Event\";\nimport Vibe from \"./components/event/Vibe\";\nimport Memories from \"./components/event/Memories\";\nimport AddMemorie from \"./components/event/AddMemorie\";\nimport FormUserComponent from \"./components/FormUserComponent\";\n// import Vibe from \"./components/Vibe\";\n// import FormUserComponent from './components/FormUserComponent';\nimport Settings from \"./components/Settings\";\nimport Playlist from \"./components/event/Playlist\";\nimport AddSong from \"./components/event/AddSong\";\n\n\nconst NotFound = () => {\n  return <div>Page not found</div>;\n};\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          {/*  */}\n          <Route exact path=\"/welcome\" component={FormUserComponent} />\n          {/*  */}\n\n          <Route\n            exact\n            path=\"/signup\"\n            render={props => <Signup setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={props => <Login setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={props => <Home user={this.state.user} {...props} />}\n          />\n          <Route exact path=\"/legal\" component={Legal} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/team\" component={Team} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/explore\" component={Explore} />\n          <Route\n            exact\n            path=\"/share-funeral-plans\"\n            component={ShareFuneralPlan}\n          />\n          <Route\n            exact\n            path=\"/share-funeral-plans/add-contact\"\n            component={AddContact}\n          />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/team\" component={Team} />\n          <Route path=\"/settings\" component={Settings} />\n          {/* <Articles /> */}\n          <Route\n            path=\"/body\"\n            render={props => <Body user={this.state.user} {...props} />}\n          />\n          <Route exact path=\"/body/location\" component={Location}></Route>\n          <Route exact path=\"/body/handlebody\" component={HandleBody}></Route>\n\n          {/* <Route exact path=\"/messages\" component={Messages}></Route>\n          <Route exact path=\"/messages/letters\" component={Letters}></Route>\n          <Route exact path=\"/messages/quotes\" component={Quotes}></Route>\n          <Route exact path=\"/messages/documents\" component={Documents}></Route>  */}\n\n          <Route\n            path=\"/event\"\n            render={props => <Event user={this.state.user} {...props} />}\n          />\n           <Route exact path=\"/event/vibe\" component={Vibe} /> \n\n         \n          <Route\n            exact\n            path=\"/messages\"\n            render={props => <Messages user={this.state.user} {...props} />}\n          ></Route>\n          <Route exact path=\"/messages/letters\" render={props => <Letters user={this.state.user} {...props} />}></Route>\n          <Route exact path=\"/messages/quotes\" component={Quotes}></Route>\n          <Route exact path=\"/messages/documents\" component={Documents}></Route>\n          <Route path=\"/funeral/event\" component={Event} />\n          <Route exact path=\"/vibe\" component={Vibe} />\n          <Route exact path=\"/event/playlist\" component={Playlist}></Route>\n          <Route exact path=\"/event/playlist/AddSong\" component={AddSong}></Route>\n          \n          <Route exact path=\"/\" render={props => <Home user={this.state.user} {...props}/>} />\n          <Route exact path=\"/body\" render={props => <Body user={this.state.user} {...props}/>} />\n\n          <Route\n            exact\n            path=\"/\"\n            render={props => <Home user={this.state.user} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/body\"\n            render={props => <Body user={this.state.user} {...props} />}\n          />\n\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/team\" component={Team} />\n\n          <Route component={NotFound} />\n        </Switch>\n        <BottomNavbar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}